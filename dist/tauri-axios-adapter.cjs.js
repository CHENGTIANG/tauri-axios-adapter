"use strict";const b=require("@tauri-apps/plugin-http"),o=require("axios"),q=require("axios/unsafe/core/buildFullPath.js"),A=require("axios/unsafe/helpers/buildURL.js"),P=require("axios/unsafe/core/settle.js"),R=async e=>{let{baseURL:n,url:i,params:h,paramsSerializer:p,method:f,data:c,timeout:r,responseType:s,headers:l,fetchOptions:x}=e;i=A(q(n,i),h,p),s=s?(s+"").toLowerCase():"text",c instanceof FormData&&l.setContentType(null);const a=new Request(i,{...x,method:f.toUpperCase(),body:c,headers:l.normalize(!1).toJSON()}),m=(async()=>{try{const t=await b.fetch(a),d=await T(t,s);return new Promise((u,w)=>{const y={data:d,status:t.status,statusText:t.statusText,headers:o.AxiosHeaders.from(t.headers).normalize(!1),config:e,request:a};P(u,w,y)})}catch(t){throw o.AxiosError.from(t,t&&t.code,e,a)}})();if(r&&r>0){const t=new Promise((d,u)=>setTimeout(()=>{u(new o.AxiosError(`timeout of ${r}ms exceeded`,o.AxiosError.ECONNABORTED,e,a))},r));return await Promise.race([m,t])}else return m};async function T(e,n){switch(n){case"json":return e.json();case"blob":return new Blob([await e.blob()],{type:e.headers.get("content-type")??void 0});case"arraybuffer":return e.arrayBuffer()}return e.text()}module.exports=R;
